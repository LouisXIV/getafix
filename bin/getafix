#!/usr/bin/env node

var getafix = require('..'),
    _ = require('underscore'),
    info = require('../package.json'),

    yargs = require('yargs')
      .usage('getafix [options] dir')
      .describe('version', 'Print version information and quit.')
      .alias('version', 'v')
      .describe('help', 'Print help information and quit.')
      .alias('help', 'h'),

    args = yargs.argv,
    dir = _.first(args._) || process.cwd();

if (args.version) {
  console.log(info.name + ' ' + info.version);
  process.exit(0);
} else if (args.help) {
  yargs.showHelp();
  process.exit(0);
}

// TODO: move all this text manipulation stuff into a module

println('Getafixing...');
print('\n\n');

getafix(dir, args).then(function () {
  move(0, -2);
  clearLine();
  println();
  clearLine();
  println('Done.');
}, function (err) {
  console.log('Error', err);
}, displayProgress);

function displayProgress(info) {
  var total = info.total,
      done = info.done,
      displaySize = Math.min(40, total),
      ratio = Math.min(1, displaySize / done),
      doneChars = Math.ceil(done * ratio),
      toGoChars = displaySize - doneChars;

  move(0, -2);
  clearLine();
  println(done + ' / ' + total + '. Done: ' + info.file);
  println('[' + repeat('|', doneChars) + repeat('-', toGoChars) + ']');
}

function move(xDiff, yDiff) {
  print(
    (xDiff > 0 ? '\u001b[' + xDiff + 'C' : xDiff < 0 ? '\u001b[' + (-xDiff) + 'D' : '')
     + (yDiff > 0 ? '\u001b[' + yDiff + 'B' : yDiff < 0 ? '\u001b[' + (-yDiff) + 'A' : '')
  );
}

function print(text) {
  process.stdout.write(text);
}
function println(text) {
  process.stdout.write((text || '') + '\n');
}

function repeat(str, len) {
  if (len > 0) {
    var A = Array;
    return (new A(len + 1)).join(str);
  } else {
    return '';
  }
}
function clearLine() {
  print('\u001b[K');
}
